<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on The Quiescent Current</title>
    <link>https://quiescent.us/languages/haskell/</link>
    <description>Recent content in Haskell on The Quiescent Current</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>©2022 Jeremy Wright</copyright>
    <lastBuildDate>Thu, 25 Mar 2021 15:00:14 -0700</lastBuildDate><atom:link href="https://quiescent.us/languages/haskell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Write a Scheme (Log)</title>
      <link>https://quiescent.us/series/write-a-scheme/write-a-scheme/</link>
      <pubDate>Thu, 25 Mar 2021 15:00:14 -0700</pubDate>
      
      <guid>https://quiescent.us/series/write-a-scheme/write-a-scheme/</guid>
      <description>Running post/diary of my Write You a Scheme
I&amp;rsquo;m testing the idea of an Luhmann Index, or Map of Content, as this work log expands to link into posts and interestingness the effort generates.
2022-04-15 Basic Parsing work. I can parse some patterns into Either types or parse error. Questions What is a combinator? </description>
    </item>
    
    <item>
      <title>Using QuickCheck&#39;s Positive Type Level Modifier</title>
      <link>https://quiescent.us/2020/12/quickcheck-type-level-modifiers/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 -0700</pubDate>
      
      <guid>https://quiescent.us/2020/12/quickcheck-type-level-modifiers/</guid>
      <description>One of my students this semester was struggling with the material. This student is a very diligent worker and has been researching the problems trying to get a better understanding of the material before digging in. Sometimes however, there is no replacement for just digging in and coding something. This does at least two things, it solidifies the material you&amp;rsquo;re read so far, and most importantly it shows you the limits of what you currently understand and urges you to learn more.</description>
    </item>
    
    <item>
      <title>Idiomatic Learning</title>
      <link>https://quiescent.us/2013/10/idiomatic-learning/</link>
      <pubDate>Sun, 20 Oct 2013 23:00:00 +0000</pubDate>
      
      <guid>https://quiescent.us/2013/10/idiomatic-learning/</guid>
      <description>&lt;p&gt;When learning a new language I find it helpful to study a languages idioms. Idioms exist in a language for a specific reason. Sometimes that reason is to further the principles of the language, other times it’s to mask, or otherwise deal with some underlying design decision of the language. Currently, I am studying Haskell, and currently I am struggle to clarify the idioms of the language. The syntax is still very new and awkward, currently with a total authoring in Haskell of 713 lines.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Interesting article about Monads</title>
      <link>https://quiescent.us/2013/08/interesting-article-about-monads/</link>
      <pubDate>Fri, 02 Aug 2013 22:49:01 +0000</pubDate>
      
      <guid>https://quiescent.us/2013/08/interesting-article-about-monads/</guid>
      <description>I found an interesting blog today with some clear and interesting discussion on Haskell, and Monads: http://intoverflow.wordpress.com/2010/07/20/i-come-from-java-and-want-to-know-what-monads-are-in-haskell/</description>
    </item>
    
    <item>
      <title>My Haskell Environment for Project Euler</title>
      <link>https://quiescent.us/2013/08/my-haskell-environment-for-project-euler/</link>
      <pubDate>Fri, 02 Aug 2013 16:51:40 +0000</pubDate>
      
      <guid>https://quiescent.us/2013/08/my-haskell-environment-for-project-euler/</guid>
      <description>&lt;p&gt;For the last several months I&amp;rsquo;ve been working on Project Euler in Haskell. My intent has been to learn Haskell, and grasp the functional concepts. While working on several problems it&amp;rsquo;s important to have a workflow that allows for a fast cycle time. I spent some time with Cabal, attempting to build a scheme that works efficiently, but was unable to do so. Instead I setup a mix of cabal-dev, and make to build a fast workflow that allow for compiling, testing, common code libraries, and benchmarks. This post is a walk though of that workflow.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Haskell a Few Problems Later</title>
      <link>https://quiescent.us/2013/05/haskell-a-few-problems-later/</link>
      <pubDate>Tue, 14 May 2013 04:28:58 +0000</pubDate>
      
      <guid>https://quiescent.us/2013/05/haskell-a-few-problems-later/</guid>
      <description>&lt;p&gt;Well, the Haskell honeymoon is over for me. I spent some time working on a few Project Euler problems this weekend, and my initial assumptions formed from toy problems were dashed. While I was able to solve 3 problems fairly quickly, I faced a number of non trivial bugs, and memory issues. On the other side of my naïve passion, I’m finding a functional thought process, and it’s exciting.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Haskell Day 1 (Again)</title>
      <link>https://quiescent.us/2013/04/haskell-day-1-again/</link>
      <pubDate>Mon, 22 Apr 2013 05:29:11 +0000</pubDate>
      
      <guid>https://quiescent.us/2013/04/haskell-day-1-again/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve restarted my haskell programming education. Here is my implementation of &lt;a href=&#34;http://imranontech.com/2007/01/24/using-fizzbuzz-to-find-developers-who-grok-coding/&#34;&gt;FizzBuzz&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Know Its Name</title>
      <link>https://quiescent.us/2012/07/know-its-name/</link>
      <pubDate>Sat, 21 Jul 2012 19:24:19 +0000</pubDate>
      
      <guid>https://quiescent.us/2012/07/know-its-name/</guid>
      <description>Programming is at it&amp;rsquo;s heart an struggle in communication. Source code is the communication medium with the processor; Comment the medium to other coders, and UML the medium to higher-level communication. Computer Scientists have the stereotype of being poor communicators, but in our own mediums, we&amp;rsquo;re phenomenal. This fact is no where more apparent, than trying to explain source code to someone else. How does one read source code? I&amp;rsquo;m currently, learning Haskell, and my first goal is to understand this question.</description>
    </item>
    
  </channel>
</rss>
