<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Parallelism on Jeremy&#39;s CodeStrokes</title>
    <link>http://www.codestrokes.com/categories/parallelism/</link>
    <description>Recent content in Parallelism on Jeremy&#39;s CodeStrokes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Creative Commons Share Alike</copyright>
    <lastBuildDate>Sun, 23 Oct 2011 17:55:47 +0000</lastBuildDate>
    
	<atom:link href="http://www.codestrokes.com/categories/parallelism/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parallel Game-of-Life</title>
      <link>http://www.codestrokes.com/2011/10/parallel-game-of-life/</link>
      <pubDate>Sun, 23 Oct 2011 17:55:47 +0000</pubDate>
      
      <guid>http://www.codestrokes.com/2011/10/parallel-game-of-life/</guid>
      <description>Conway&amp;rsquo;s Game of Life is a dramatic illustration of emmergent behavior; that a seemingly complex system, such as cell mitosis can be governed by a set of simple rules. OpenMP is a fantastic set of language extensions which allows one to add dramatic parallelism without complex thread management. As a demonstration of OpenMP&amp;rsquo;s simplicity I implemented the Game of Life. The code and all analysis is available on bitbucket.org.</description>
    </item>
    
  </channel>
</rss>