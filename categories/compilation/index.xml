<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compilation on Jeremy&#39;s CodeStrokes</title>
    <link>http://www.codestrokes.com/categories/compilation/</link>
    <description>Recent content in Compilation on Jeremy&#39;s CodeStrokes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Creative Commons Share Alike</copyright>
    <lastBuildDate>Sun, 14 Jul 2013 23:00:11 +0000</lastBuildDate>
    
	<atom:link href="http://www.codestrokes.com/categories/compilation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Is Monolithic Code Faster?</title>
      <link>http://www.codestrokes.com/2013/07/is-monolithic-code-faster/</link>
      <pubDate>Sun, 14 Jul 2013 23:00:11 +0000</pubDate>
      
      <guid>http://www.codestrokes.com/2013/07/is-monolithic-code-faster/</guid>
      <description>As a software engineer I have a vested interest in disproving this statement. Bjarne Stroustroup says C++ is designed to create efficient abstractions. A software engineer’s job is to create simple abstractions to complex systems. State machines form a large part of many systems. The other day, a co-worker came to me, and asked, “Is it better to make straight line code for each case statement, even if it repeats, or is it better to abstraction into functions and make the code ‘cleaner’.</description>
    </item>
    
    <item>
      <title>Building an Interpreter</title>
      <link>http://www.codestrokes.com/2012/05/building-an-interpreter/</link>
      <pubDate>Mon, 28 May 2012 17:03:55 +0000</pubDate>
      
      <guid>http://www.codestrokes.com/2012/05/building-an-interpreter/</guid>
      <description>When I started programming, I thought that compilers where these magic behemoths; Oracles which consumed your source code, and prophesied the resulting program. I thought that the compiler was an integral part of the &amp;ldquo;system&amp;rdquo;. I was excited to realize that the compiler is simply another program. A program you can write yourself. You can write a compiler, for your very own language. Go ahead, make up a language, I&amp;rsquo;ll wait&amp;hellip;</description>
    </item>
    
  </channel>
</rss>