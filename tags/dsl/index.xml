<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DSL on Quiescent Engineering, LLC.</title>
    <link>/tags/dsl/</link>
    <description>Recent content in DSL on Quiescent Engineering, LLC.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â©2020 Jeremy Wright</copyright>
    <lastBuildDate>Sun, 07 Jul 2013 23:00:30 +0000</lastBuildDate>
    
        <atom:link href="/tags/dsl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Patterns are evidence of a language&#39;s lacking</title>
      <link>/2013/07/patterns-are-evidence-of-a-languages-lacking/</link>
      <pubDate>Sun, 07 Jul 2013 23:00:30 +0000</pubDate>
      
      <guid>/2013/07/patterns-are-evidence-of-a-languages-lacking/</guid>
      <description>A coworker of mine stated something interesting, &amp;ldquo;&amp;hellip;a pattern is evidence of missing feature in the language&amp;hellip;&amp;rdquo;. At first I struggled with this statement. How can you design a language general enough to be widely used, and simultaneously cover all the desirable idioms such that patterns are built in? At first this seemed silly to me, until I heard Erik Meijer state in a Haskell lecture, &amp;ldquo;..this is why we implemented LINQ as a pattern instead of a language feature&amp;hellip;&amp;rdquo;</description>
      
    </item>
    
  </channel>
</rss>
