<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Structure on Jeremy&#39;s CodeStrokes</title>
    <link>http://www.codestrokes.com/tags/data-structure/</link>
    <description>Recent content in Data Structure on Jeremy&#39;s CodeStrokes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Creative Commons Share Alike</copyright>
    <lastBuildDate>Mon, 09 May 2011 06:59:01 +0000</lastBuildDate>
    
	<atom:link href="http://www.codestrokes.com/tags/data-structure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Red-Black Tree</title>
      <link>http://www.codestrokes.com/2011/05/the-red-black-tree-part-1/</link>
      <pubDate>Mon, 09 May 2011 06:59:01 +0000</pubDate>
      
      <guid>http://www.codestrokes.com/2011/05/the-red-black-tree-part-1/</guid>
      <description>C++ Source Code D Source Code
D provides a number of features that simplify designing software, especially in the embedded environment. I will show in this 2 part comparison, between C++ and D, that D helps one write correct code. Correct code is something Andrei Alexandrescu, stresses heavily as a prominent feature of D. I use the Red-Black Tree for such a comparison since its complicated enough to make memory management difficult, while retaining real-world application.</description>
    </item>
    
  </channel>
</rss>